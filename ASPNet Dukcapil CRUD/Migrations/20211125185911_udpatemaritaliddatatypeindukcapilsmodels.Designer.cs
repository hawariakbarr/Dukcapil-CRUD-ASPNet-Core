// <auto-generated />
using System;
using ASPNet_Dukcapil_CRUD.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASPNet_Dukcapil_CRUD.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20211125185911_udpatemaritaliddatatypeindukcapilsmodels")]
    partial class udpatemaritaliddatatypeindukcapilsmodels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASPNet_Dukcapil_CRUD.Models.Dukcapil", b =>
                {
                    b.Property<int>("DukcapilID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BrithDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaidenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaritalID")
                        .HasColumnType("int");

                    b.Property<int?>("MaritalStatusMaritalID")
                        .HasColumnType("int");

                    b.Property<int>("NIK")
                        .HasMaxLength(16)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReligionID")
                        .HasColumnType("int");

                    b.HasKey("DukcapilID");

                    b.HasIndex("MaritalStatusMaritalID");

                    b.HasIndex("ReligionID");

                    b.ToTable("Dukcapils");
                });

            modelBuilder.Entity("ASPNet_Dukcapil_CRUD.Models.MaritalStatus", b =>
                {
                    b.Property<int>("MaritalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MaritalDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaritalID");

                    b.ToTable("MaritalStatuses");
                });

            modelBuilder.Entity("ASPNet_Dukcapil_CRUD.Models.Religion", b =>
                {
                    b.Property<int>("ReligionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReligionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReligionID");

                    b.ToTable("Religions");
                });

            modelBuilder.Entity("ASPNet_Dukcapil_CRUD.Models.Dukcapil", b =>
                {
                    b.HasOne("ASPNet_Dukcapil_CRUD.Models.MaritalStatus", "MaritalStatus")
                        .WithMany()
                        .HasForeignKey("MaritalStatusMaritalID");

                    b.HasOne("ASPNet_Dukcapil_CRUD.Models.Religion", "Religion")
                        .WithMany()
                        .HasForeignKey("ReligionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaritalStatus");

                    b.Navigation("Religion");
                });
#pragma warning restore 612, 618
        }
    }
}
